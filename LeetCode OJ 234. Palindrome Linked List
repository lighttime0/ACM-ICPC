class Solution {
public:
    bool isPalindrome(ListNode* head) {
        ListNode *p1 = head;
        ListNode *p2 = head;
        ListNode *p3;
        int num_of_node = 0;
        if (head == NULL || head->next == NULL)
        	return true;
        while (p1 != NULL)
        {
        	++num_of_node;
        	p1 = p1->next;
        }
        int mid = num_of_node/2;
        int i;
        for (i = 0; i < mid; ++i)
        	p2 = p2->next;
        if (num_of_node%2 == 1)
        	p2 = p2->next;
        p1 = p2;
        p2 = p2->next;
        p1->next = NULL;
        while (p2 != NULL)
        {
        	p3 = p2->next;
        	p2->next = p1;
        	p1 = p2;
        	p2 = p3;
        }
        ListNode *rev_head = p1;
        for (i = 0; i < mid; ++i)
        {
        	if (head->val != rev_head->val)
        		break;
        	head = head->next;
        	rev_head = rev_head->next;
        }
        if (i == mid)
        	return true;
        else
        	return false;
    }
};
